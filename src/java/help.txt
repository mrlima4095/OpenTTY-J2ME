<index>
OpenTTY $VERSION - $PATCH
Copyright (C) 2025 - Mr. Lima


[ GitHub Repository ]
https://github.com/mrlima4095/OpenTTY-J2ME
</index>

<about>
Usage: about [PACKAGE]

- Prints information about PACKAGE.
</about>
<add>
Usage: add [TEXT]

- Add TEXT in nano buffer;
- Without TEXT it add a line break.
</add>
<alias>
Usage: alias [KEY]=[COMMAND]

- Without arguments, 'alias' prints the list of aliases;
- Otherwise, an alias is defined for each KEY whose COMMAND is given;
- When only KEY is found and it is an alias prints it value.
</alias>
<basename>
Usage: basename [FILENAME]

- Prints FILENAME with any leading directory components removed.
</basename>
<bg>
Usage: bg [COMMAND]

- Start a new Thread to run COMMAND.
</bg>
<bind>
Usage: bind [PORT]

- Listen at PORT for connections;
- Without PORT 'bind' takes the PORT from the environment key.

You can connect it with other client. The payloads received is run and it output is sent to client.
</bind>
<bruteforce>
Usage: bruteforce [COMMAND]

- Run COMMAND while process 'bruteforce' is alive;
- You can stop this killing it process;
- All bruteforce instance stop when process is killed.
</bruteforce>
<buff>
Usage: buff [TEXT]

- Set content of standard input as TEXT.
</buff>
<build>
Usage: build

- Prints MIDlet build code.
</build>
<builtin>
Usage: builtin [COMMAND]

- Run COMMAND, without considering aliases.
</builtin>
<call>
Usage: call [PHONE]

- Request Device API to make a call to PHONE.
</call>
<case>
Usage: case [TYPE] ([NAME]) [COMMAND]

- Look for NAME in context of TYPE;
- If found, run COMMAND.

Valid TYPE's:
- alias - file - key - root
- screen - thread - trace

Put '!' as prefix in TYPE to invert the operation.
</case>
<cat>
Usage: cat [FILE]

- Prints content of FILE;
- If FILE not found, prints anything.
</cat>
<cd>
Usage: cd [DIR]

- Change current working directory to DIR;
- Without DIR return to '/home/'.
</cd>
<chmod>
Usage: chmod [NODE]

- Request Device API looking for Permission NODE;
- Log NODE status into MIDlet logs.

Permission NODE's:
- http - socket - file - prg
</chmod>
<clear>
Usage: clear [PAGE]

- Clear PAGE content;
- Without PAGE, clears console (stdout).

MIDlet PAGE's:
- stdin - stdout - history - logs
</clear>
<clone>
Usage: clone [URL]

- Make a HTTP GET request in URL;
- Run response as a script.

It uses MIDlet-Proxy by default.
</clone>
<conf>
Usage: conf [FILE]

- Prints FILE in INI format;
- The parsing only works if source FILE is in Json format.
</conf>
<cp>
Usage: cp [ORIGIN] [COPY]

- Copy ORIGIN into COPY;
- Without COPY the new FILE name is 'ORIGIN-copy'.
</cp>
<cron>
Usage: cron [TIME] [COMMAND]

- Wait TIME before run COMMAND.
</cron>
<curl>
Usage: curl [URL]

- Make a HTTP GET request in URL;
- Prints response in console.
</curl>
<date>
Usage: date

- Prints current Device date and time.
</date>
<debug>
Usage: debug

- Run MIDlet debug script.
- 
</debug>
<dir>
Usage: dir [OPTions]

- Prints FILES of current working directory;
- If you're in home it open File Explorer.

OPTions:
-a	Include hidden files in listing;
-v	Prints listing when you're in home.
</dir>
<du>
Usage: du [FILE]

- Prints length (in Bytes) of FILE.
</du>
<echo>
Usage: echo [TEXT]

- Prints TEXT in console;
- Without TEXT it prints a line break.
</echo>
<env>
Usage: env [KEY]

- Display environment keys;
- With KEY prints it VALUE.
</env>
<exec>
Usage: exec [COMMAND &]

- Run more then one COMMAND in once process call;
- You can split COMMANDs with char '&'.

See also about command 'execute'.
</exec>
<execute>
Usage: execute [COMMAND &]

- Run more then one COMMAND in once process call;
- You can split COMMANDs with char ';'.

See also about command 'exec'.
</execute>
<exit>
Usage: exit

- Stop MIDlet.
</exit>
<expr>
Usage: expr [EXPR]

- Perform math EXPRession;
- Prints it result in console.
</expr>
<export>
Usage: export [KEY]

- Display environment keys;
- With KEY clear it VALUE.
</export>
<find>
Usage: find [FILE] [PATTERN]

- Look for PATTERN in FILE;
- It prints 'true' or 'false' in console;
</find>
<for>
Usage: for [KEY] ([FILE]) [COMMAND]

- Read content of FILE;
- Set VALUE of KEY as current LINE and run COMMAND;
- COMMAND will be run for with KEY.

</for>
<fw>
Usage: fw [ADDRESS]

- Look for information about an IP ADDRESS.

This command uses API from http://ipinfo.io.
</fw>
<gc>
Usage: gc

- Trigger garbage collector.
</gc>
<gaddr>
Usage: gaddr [DOMAIN]

- Look for IP Address of DOMAIN;
- Prints it result in console.

This command uses Cloudflare DNS (1.1.1.1), if it isn't available in your network, it may not work.
</gaddr>
<gauge>
Usage: gauge [TEXT]

- Open a Alert with TEXT;
- It contains a infinity loading progress bar.
</gauge>
<genip>
Usage: genip

- Generate a random IP Address;
- Prints it result in console.
</genip>
<get>
Usage: get [FILE]

- Read content of FILE;
- Set it as content in nano buffer.
</get>