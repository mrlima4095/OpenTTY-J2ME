#!/bin/lua

--[[

[ Config ]

name=PackJ
version=1.5
description=OpenTTY Package Manager

include=/lib/settings

config=execute case !key (REPO) set REPO=opentty.xyz:31522; x11 list /bin/yang; true
command=yang,setrepo

yang=execute case !user (root) exec echo ":: Root permission required!" & return 13 ; x11 list /bin/yang;
setrepo=execute set VALUE=REPO; set LABEL=IP Adress (OpenTTY Server); export RETURN; cfg run;

shell.name=yang
shell.args=install,update,query,setrepo,info

install=execute case file (.yang-lock) exec rm /home/.yang-lock & set OLD_QUERY=$QUERY & set QUERY=$LOCAL & tick Installing... & query socket://$REPO get lib/$RESOURCE & tick & set QUERY=$OLD_QUERY & unset OLD_QUERY & unset RESOURCE & unset LOCAL & & touch /home/.yang-lock; case !file (.yang-lock) exec log add error Yang - Broken pipe (Blocked duplicated) & echo [ Yang ] Command failed! & echo [ Yang ] See logs to more info.;
update=execute case file (.yang-lock) exec rm /home/.yang-lock & set OLD_QUERY=$QUERY & set QUERY=/bin/yang & tick Updating... & query socket://$REPO get lib/yang & tick & set QUERY=$OLD_QUERY & unset OLD_QUERY & touch /home/.yang-lock & cd & import /bin/yang; case !file (.yang-lock) exec log add error Yang - Broken pipe (Blocked duplicated) & echo [ Yang ] Command failed! & echo [ Yang ] See logs to more info.;
query=execute x11 quest /lib/yang;

info=execute echo PackJ 1.5 (Default);

[ DISPLAY ]

quest.title=PackJ Query
quest.label=Package
quest.key=RESOURCE
quest.cmd=execute yang install;

[ Index ]

list.title=Repository
list.content=Android ME,Armitage,Auto Clean,Auto Syntax,Back Previous,BoxME,CMatrix,Discord (MIDlet),Forge,Github (MIDlet),GoBuster (Word list),ImmersiveShell,JAuth2,JBuntu,JBenchmark,J2ME Loader,MobiX Loader,PackJ (Update),PackJ (Proxy),PasteBin,SmartME SDK,Updater,ViaVersion,WebProxy
list.button=Install

Armitage=execute set RESOURCE=armitage; set LOCAL=/bin/armitage; yang install; 
Auto Clean=execute set RESOURCE=autogc; set LOCAL=/bin/autogc; yang install;
Auto Syntax=execute set RESOURCE=tab; set LOCAL=/bin/tab; yang install; 
Back Previous=execute set RESOURCE=bprevious; set LOCAL=/lib/bprevious; yang install;
Discord (MIDlet)=execute warn This is a 3rd MIDlet from 'gtrxac'; bg exec sleep 3 & open http://146.59.80.3/discord_midp2_beta.jar;
Github (MIDlet)=execute warn This is a 3rd MIDlet from 'shinovon'; bg exec sleep 3 & open http://nnp.nnchan.ru/dl/GH2ME.jar;
GoBuster (Word list)=execute set RESOURCE=gobuster; set LOCAL=/home/gobuster; yang install;
ImmersiveShell=execute set RESOURCE=sh2me; set LOCAL=/bin/sh2me; yang install;
JBuntu=execute set RESOURCE=jbuntu; set LOCAL=/bin/jbuntu; yang install;
J2ME Loader=execute set RESOURCE=modme; set LOCAL=/bin/modme; yang install; import modme;
PasteBin=execute set RESOURCE=pastebin; set LOCAL=/bin/pastebin; yang install;
Updater=execute set RESOURCE=sync; set LOCAL=/bin/sync; yang install;
ViaVersion=execute set RESOURCE=viaversion; set LOCAL=/bin/axrz; yang install;

]]

local server, proxy = os.getenv("REPO") or "opentty.xyz:31522", getAppProperty("MIDlet-Proxy") or "http://opentty.xyz/proxy.php?"
local repo = "raw.githubusercontent.com/mrlima4095/OpenTTY-J2ME/main/assets/lib/"
local use_proxy = false

local mirror = {
    ["android"] = { name = "Android ME", file = "/bin/droid", requires = { "forge" } },
    ["armitage"] = { name = "Armitage", file = "/bin/armitage" },
    ["autogc"] = { name = "Auto Clean", file = "/bin/autogc" },
    ["boxme"] = { name = "BoxME", file = "/bin/boxme" },
    ["bprevious"] = { name = "Back Previous", file = "/lib/bprevious" },
    ["cmatrix"] = { name = "CMatrix", file = "/bin/cmatrix" },
    ["darkdm"] = { name = "DarkDM+", file = "/bin/darkdm" },
    ["debuggers"] = { name = "JBenchmark", file = "/bin/jdb" },
    ["forge"] = { name = "Forge", file = "/bin/forge" },
    ["httpd"] = { name = "Lua - HTTPd Server", file = "/lib/httpd.lua" },
    ["jbuntu"] = { name = "JBuntu", file = "/bin/jbuntu" },
    ["modme"] = { name = "J2ME Loader", file = "/bin/modme" },
    ["mxos"] = { name = "MobiX UI", file = "/bin/mxos" },
    ["proxy.lua"] = { name = "WebProxy", file = "/bin/shprxy" },
    ["pastebin"] = { name = "PasteBin", file = "/bin/pastebin" },
    ["sdkme"] = { name = "SmartME SDK", file = "/bin/sdk", requires = { "forge" } },
    ["sh2me"] = { name = "ImmersiveShell", file = "/bin/sh2me" },
    ["tab"] = { name = "Auto Syntax", file = "/bin/tab" },
    ["viaversion"] = { name = "ViaVersion", file = "/bin/axrz" }
}

local function root()
    local status = os.execute("case user (root) false")
    if status == 255 then return true
    else print(":: Root permission required!") os.exit(13) end
end

if root() then
    if arg[1] then print(mirror[arg[1]]) else print(":: Package '" .. arg[1] .. "' not found") os.exit(127) end
end
